3b.                QUERY PLAN                           
---------------------------------------------------------------
 Seq Scan on customers  (cost=0.00..721.00 rows=995 width=156)
   Filter: ((country)::text = 'Japan'::text)

3d. 
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Index Scan using customers_country on customers  (cost=0.00..56.66 rows=995 width=156)
   Index Cond: ((country)::text = 'Japan'::text)

5a. 
                                       QUERY PLAN                                        
-----------------------------------------------------------------------------------------
 Sort  (cost=1501.33..1501.36 rows=11 width=13)
   Sort Key: (avg(o.totalamount))
   ->  HashAggregate  (cost=1501.00..1501.14 rows=11 width=13)
         ->  Hash Join  (cost=921.00..1441.00 rows=12000 width=13)
               Hash Cond: (o.customerid = c.customerid)
               ->  Seq Scan on orders o  (cost=0.00..220.00 rows=12000 width=12)
               ->  Hash  (cost=671.00..671.00 rows=20000 width=9)
                     ->  Seq Scan on customers c  (cost=0.00..671.00 rows=20000 width=9)

With hash join disabled: 
                                                                     QUERY PLAN                                                 
-----------------------------------------------------------------------------------------------------------
 Sort  (cost=2325.52..2325.55 rows=11 width=13)
   Sort Key: (avg(o.totalamount))
   ->  HashAggregate  (cost=2325.19..2325.33 rows=11 width=13)
         ->  Merge Join  (cost=1033.15..2265.19 rows=12000 width=13)
               Merge Cond: (c.customerid = o.customerid)
               ->  Index Scan using customers_pkey on customers c  (cost=0.00..1002.25 rows=20000 width=9)
               ->  Sort  (cost=1033.04..1063.04 rows=12000 width=12)
                     Sort Key: o.customerid
                     ->  Seq Scan on orders o  (cost=0.00..220.00 rows=12000 width=12)
5b. 
   QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Merge Join  (cost=1033.15..2265.19 rows=12000 width=192)
   Merge Cond: (c.customerid = o.customerid)
   ->  Index Scan using customers_pkey on customers c  (cost=0.00..1002.25 rows=20000 width=156)
   ->  Sort  (cost=1033.04..1063.04 rows=12000 width=36)
         Sort Key: o.customerid
         ->  Seq Scan on orders o  (cost=0.00..220.00 rows=12000 width=36)

With merge join disabled:
            QUERY PLAN                                    
---------------------------------------------------------------------------------
 Sort  (cost=3783.54..3813.54 rows=12000 width=192)
   Sort Key: c.customerid
   ->  Hash Join  (cost=370.00..1861.00 rows=12000 width=192)
         Hash Cond: (c.customerid = o.customerid)
         ->  Seq Scan on customers c  (cost=0.00..671.00 rows=20000 width=156)
         ->  Hash  (cost=220.00..220.00 rows=12000 width=36)
               ->  Seq Scan on orders o  (cost=0.00..220.00 rows=12000 width=36)


7a.

                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Sort  (cost=614926.51..614927.01 rows=199 width=130)
   Sort Key: ordercounts1.customerid
   ->  Subquery Scan ordercounts1  (cost=1008.88..614918.91 rows=199 width=130)
         Filter: (5 >= (SubPlan 1))
         ->  HashAggregate  (cost=1008.88..1016.35 rows=597 width=15)
               ->  Hash Join  (cost=733.44..1004.41 rows=597 width=15)
                     Hash Cond: (o.customerid = c.customerid)
                     ->  Seq Scan on orders o  (cost=0.00..220.00 rows=12000 width=4)
                     ->  Hash  (cost=721.00..721.00 rows=995 width=15)
                           ->  Seq Scan on customers c  (cost=0.00..721.00 rows=995 width=15)
                                 Filter: ((country)::text = 'Japan'::text)
         SubPlan 1
           ->  Aggregate  (cost=1028.29..1028.30 rows=1 width=0)
                 ->  HashAggregate  (cost=1010.38..1020.83 rows=597 width=15)
                       Filter: ($0 < count(*))
                       ->  Hash Join  (cost=733.44..1004.41 rows=597 width=15)
                             Hash Cond: (o.customerid = c.customerid)
                             ->  Seq Scan on orders o  (cost=0.00..220.00 rows=12000 width=4)
                             ->  Hash  (cost=721.00..721.00 rows=995 width=15)
                                   ->  Seq Scan on customers c  (cost=0.00..721.00 rows=995 width=15)
                                         Filter: ((country)::text = 'Japan'::text)

7d.

 QUERY PLAN                                                       
------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=646759.29..646763.33 rows=594 width=23)
   Merge Cond: (c.customerid = o.customerid)
   ->  Sort  (cost=1984.28..1985.77 rows=597 width=27)
         Sort Key: c.customerid
         ->  Hash Join  (cost=1928.39..1956.75 rows=597 width=27)
               Hash Cond: (c.customerid = c.customerid)
               ->  HashAggregate  (cost=1007.39..1014.85 rows=597 width=4)
                     ->  Hash Join  (cost=733.44..1004.41 rows=597 width=4)
                           Hash Cond: (o.customerid = c.customerid)
                           ->  Seq Scan on orders o  (cost=0.00..220.00 rows=12000 width=4)
                           ->  Hash  (cost=721.00..721.00 rows=995 width=4)
                                 ->  Seq Scan on customers c  (cost=0.00..721.00 rows=995 width=4)
                                       Filter: ((country)::text = 'Japan'::text)
               ->  Hash  (cost=671.00..671.00 rows=20000 width=15)
                     ->  Seq Scan on customers c  (cost=0.00..671.00 rows=20000 width=15)
   ->  Sort  (cost=644775.02..644775.51 rows=199 width=4)
         Sort Key: o.customerid
         ->  Subquery Scan o  (cost=1007.39..644767.42 rows=199 width=4)
               Filter: ((SubPlan 1) < 5)
               ->  HashAggregate  (cost=1007.39..1014.85 rows=597 width=4)
                     ->  Hash Join  (cost=733.44..1004.41 rows=597 width=4)
                           Hash Cond: (o.customerid = c.customerid)
                           ->  Seq Scan on orders o  (cost=0.00..220.00 rows=12000 width=4)
                           ->  Hash  (cost=721.00..721.00 rows=995 width=4)
                                 ->  Seq Scan on customers c  (cost=0.00..721.00 rows=995 width=4)
                                       Filter: ((country)::text = 'Japan'::text)
               SubPlan 1
                 ->  GroupAggregate  (cost=1058.88..1078.30 rows=1 width=0)
                       ->  Subquery Scan o2  (cost=1058.88..1075.30 rows=597 width=0)
                             ->  HashAggregate  (cost=1058.88..1069.33 rows=597 width=4)
                                   Filter: ($1 < count(*))
                                   ->  Hash Join  (cost=783.44..1054.41 rows=597 width=4)
                                         Hash Cond: (o.customerid = c.customerid)
                                         ->  Seq Scan on orders o  (cost=0.00..220.00 rows=12000 width=4)
                                         ->  Hash  (cost=771.00..771.00 rows=995 width=4)
                                               ->  Seq Scan on customers c  (cost=0.00..771.00 rows=995 width=4)
                                                     Filter: (($0 <> customerid) AND ((country)::text = 'Japan'::text))
